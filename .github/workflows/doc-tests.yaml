name: Lint (Docs)
run-name: Lint (Docs)
on:
  pull_request:

jobs:
  changes:
    name: Check for relevant changes
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      changed: ${{ steps.changes.outputs.changed }}
      changed_files: ${{ steps.changes.outputs.changed_files }}
    steps:
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          base: ${{ github.event.pull_request.base.ref || github.event.merge_group.base_ref }}
          ref: ${{ github.event.pull_request.head.ref || github.event.merge_group.head_ref }}
          list-files: csv
          filters: |
            changed:
              - '.github/workflows/doc-tests.yaml'
              - 'CHANGELOG.md'
              - 'docs/**'
              - 'examples/**'

  doc-tests:
    name: Lint (Docs)
    needs: changes
    if: ${{ !startsWith(github.head_ref, 'dependabot/') && needs.changes.outputs.changed == 'true' }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'gravitational/teleport'
          path: 'teleport'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'gravitational/docs'
          path: 'docs'

      - name: Prepare docs site configuration
        # The environment we use for linting the docs differs from the one we
        # use for the live docs site in that we only test a single version of
        # the content.
        #
        # To do this, we replace the three submodules we use for building the
        # live docs site with a single submodule, pointing to the
        # gravitational/teleport branch we are linting.
        #
        # The docs engine expects a config.json file at the root of the
        # gravitational/docs clone that associates directories with git
        # submodules. By default, these directories represent versioned branches
        # of gravitational/teleport. We override this in order to build only a
        # single version of the docs.
        run: |
          BRANCH=$GITHUB_HEAD_REF;
          cd $GITHUB_WORKSPACE/docs
          echo "" > .gitmodules
          rm -rf content/*
          cd content
          # Rather than using a submodule, copy the teleport source into the
          # content directory.
          cp -r $GITHUB_WORKSPACE/teleport $GITHUB_WORKSPACE/docs/content
          cd $GITHUB_WORKSPACE/docs
          echo "{\"versions\": [{\"name\": \"teleport\", \"branch\": \"teleport\", \"deprecated\": false}]}" > $GITHUB_WORKSPACE/docs/config.json
          cat <<< "$(jq '.scripts."git-update" = "echo Skipping submodule update"' package.json)" > package.json
          yarn install
          yarn build-node

      - name: Check spelling
        working-directory: 'docs'
        run: yarn spellcheck content/teleport

      - name: Lint docs formatting
        working-directory: 'docs'
        run: yarn markdown-lint

      - name: Lint docs prose
        uses: 'errata-ai/vale-action@38bf078c328061f59879b347ca344a718a736018' # v2.1.0
        with:
          version: 3.8.0
          # Take the comma-separated list of files returned by the "Check for
          # relevant changes" job.
          separator: ','
          workdir: '${{ github.workspace }}/docs/content/teleport'
          files: ${{ needs.changes.outputs.changed_files }}
          # Restrict the linter to lines modified/added by a PR, not entire
          # changed files.
          filter_mode: added
          fail_on_error: true
          vale_flags: '--config=${{ github.workspace }}/docs/content/teleport/docs/.vale.ini'

      - name: Test the docs build
        working-directory: 'docs'
        run: yarn install && yarn build
