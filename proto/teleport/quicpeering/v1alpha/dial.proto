// Teleport
// Copyright (C) 2024 Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

package teleport.quicpeering.v1alpha;

import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

option go_package = "github.com/gravitational/teleport/gen/proto/go/teleport/quicpeering/v1alpha;quicpeeringv1alpha";

// Sent from the client to the server in a fresh QUIC stream to dial a server
// through a QUIC proxy peering connection. The message is sent in protobuf
// binary format, prefixed by its length encoded as a little endian uint32.
message DialRequest {
  string server_id = 1;
  string conn_type = 2;

  Addr source = 3;
  Addr destination = 4;

  // The time of the client, must be provided and within 5 minutes of the local
  // server time for 0-RTT requests.
  google.protobuf.Timestamp timestamp = 5;
  // A random id for each dial request, must be provided and unique among
  // requests presented in a 10-20 minute window for 0-RTT requests.
  fixed64 nonce = 6;
}

// A stringy Go net.Addr.
message Addr {
  string network = 1;
  string addr = 2;
}

// Sent from the server to the client as a response to a DialRequest. The
// message is likewise sent in protobuf binary format, prefixed by its length
// encoded as a little endian uint32.
message DialResponse {
  // The success or failure of the dial. If the dial is successful, the stream
  // will continue with the data of the connection.
  google.rpc.Status status = 1;
}
